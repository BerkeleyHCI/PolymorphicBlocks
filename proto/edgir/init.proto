/**
   File : init.proto
   Package : edg.inir

   As with literals and types, we need an initializer for each value type
   that captures the various levels of information we could have when
   creating a value.

   FIXME :: Does this make more sense in another file?
 */

syntax = "proto3";
package edgir.init;

import "edgir/common.proto";

/** This is the general way we initialize values in the local context.

    I think the frontend should have more type specific wrappers around
    this since the data required for each type can be different. */
message ValInit {
  oneof val {
    edgir.common.Empty floating = 1;
    edgir.common.Empty integer  = 2;
    edgir.common.Empty boolean  = 3;
    edgir.common.Empty text     = 4;
    edgir.common.Empty set      = 8;
    edgir.common.Empty struct   = 9;
    edgir.common.Empty range    = 10;
    ValInit            array    = 11;
  }

  edgir.common.Metadata meta = 127;
}
