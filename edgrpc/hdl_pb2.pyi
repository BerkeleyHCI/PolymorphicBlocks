"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
* Defines messages for a service provided in Python that exposes
HDL-to-edgir elaboration for a compiler in a different process / language.
"""
import builtins
import collections.abc
import edgir.elem_pb2
import edgir.lit_pb2
import edgir.ref_pb2
import edgir.schema_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Refinements(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Subclass(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PATH_FIELD_NUMBER: builtins.int
        CLS_FIELD_NUMBER: builtins.int
        REPLACEMENT_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> edgir.ref_pb2.LocalPath: ...
        @property
        def cls(self) -> edgir.ref_pb2.LibraryPath: ...
        @property
        def replacement(self) -> edgir.ref_pb2.LibraryPath: ...
        def __init__(
            self,
            *,
            path: edgir.ref_pb2.LocalPath | None = ...,
            cls: edgir.ref_pb2.LibraryPath | None = ...,
            replacement: edgir.ref_pb2.LibraryPath | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["cls", b"cls", "path", b"path", "replacement", b"replacement", "source", b"source"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["cls", b"cls", "path", b"path", "replacement", b"replacement", "source", b"source"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["source", b"source"]) -> typing_extensions.Literal["path", "cls"] | None: ...

    class Value(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class ClassParamPath(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            CLS_FIELD_NUMBER: builtins.int
            PARAM_PATH_FIELD_NUMBER: builtins.int
            @property
            def cls(self) -> edgir.ref_pb2.LibraryPath: ...
            @property
            def param_path(self) -> edgir.ref_pb2.LocalPath: ...
            def __init__(
                self,
                *,
                cls: edgir.ref_pb2.LibraryPath | None = ...,
                param_path: edgir.ref_pb2.LocalPath | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["cls", b"cls", "param_path", b"param_path"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["cls", b"cls", "param_path", b"param_path"]) -> None: ...

        PATH_FIELD_NUMBER: builtins.int
        CLS_PARAM_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> edgir.ref_pb2.LocalPath: ...
        @property
        def cls_param(self) -> global___Refinements.Value.ClassParamPath: ...
        @property
        def value(self) -> edgir.lit_pb2.ValueLit: ...
        def __init__(
            self,
            *,
            path: edgir.ref_pb2.LocalPath | None = ...,
            cls_param: global___Refinements.Value.ClassParamPath | None = ...,
            value: edgir.lit_pb2.ValueLit | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["cls_param", b"cls_param", "path", b"path", "source", b"source", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["cls_param", b"cls_param", "path", b"path", "source", b"source", "value", b"value"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["source", b"source"]) -> typing_extensions.Literal["path", "cls_param"] | None: ...

    SUBCLASSES_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def subclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Refinements.Subclass]: ...
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Refinements.Value]: ...
    def __init__(
        self,
        *,
        subclasses: collections.abc.Iterable[global___Refinements.Subclass] | None = ...,
        values: collections.abc.Iterable[global___Refinements.Value] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["subclasses", b"subclasses", "values", b"values"]) -> None: ...

global___Refinements = Refinements

class ModuleName(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___ModuleName = ModuleName

class IndexResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDEXED_FIELD_NUMBER: builtins.int
    @property
    def indexed(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]: ...
    def __init__(
        self,
        *,
        indexed: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["indexed", b"indexed"]) -> None: ...

global___IndexResponse = IndexResponse

class LibraryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ELEMENT_FIELD_NUMBER: builtins.int
    @property
    def element(self) -> edgir.ref_pb2.LibraryPath:
        """library element asked for"""
    def __init__(
        self,
        *,
        element: edgir.ref_pb2.LibraryPath | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["element", b"element"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["element", b"element"]) -> None: ...

global___LibraryRequest = LibraryRequest

class LibraryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ELEMENT_FIELD_NUMBER: builtins.int
    REFINEMENTS_FIELD_NUMBER: builtins.int
    @property
    def element(self) -> edgir.schema_pb2.Library.NS.Val: ...
    @property
    def refinements(self) -> global___Refinements:
        """only valid if element is a top-level block"""
    def __init__(
        self,
        *,
        element: edgir.schema_pb2.Library.NS.Val | None = ...,
        refinements: global___Refinements | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["element", b"element", "refinements", b"refinements"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["element", b"element", "refinements", b"refinements"]) -> None: ...

global___LibraryResponse = LibraryResponse

class GeneratorRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Value(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PATH_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> edgir.ref_pb2.LocalPath: ...
        @property
        def value(self) -> edgir.lit_pb2.ValueLit: ...
        def __init__(
            self,
            *,
            path: edgir.ref_pb2.LocalPath | None = ...,
            value: edgir.lit_pb2.ValueLit | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["path", b"path", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["path", b"path", "value", b"value"]) -> None: ...

    ELEMENT_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def element(self) -> edgir.ref_pb2.LibraryPath:
        """path of library element containing the generator"""
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GeneratorRequest.Value]: ...
    def __init__(
        self,
        *,
        element: edgir.ref_pb2.LibraryPath | None = ...,
        values: collections.abc.Iterable[global___GeneratorRequest.Value] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["element", b"element"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["element", b"element", "values", b"values"]) -> None: ...

global___GeneratorRequest = GeneratorRequest

class GeneratorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENERATED_FIELD_NUMBER: builtins.int
    @property
    def generated(self) -> edgir.elem_pb2.HierarchyBlock: ...
    def __init__(
        self,
        *,
        generated: edgir.elem_pb2.HierarchyBlock | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["generated", b"generated"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["generated", b"generated"]) -> None: ...

global___GeneratorResponse = GeneratorResponse

class BackendRequest(google.protobuf.message.Message):
    """Runs a backend - something that generates fabrication artifacts from a compiled design tree
    eg, generate KiCad netlist, or generate microcontroller firmware pinmap headers
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Value(google.protobuf.message.Message):
        """TODO dedup w/ same def in compiler.CompilerResult"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PATH_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> edgir.ref_pb2.LocalPath: ...
        @property
        def value(self) -> edgir.lit_pb2.ValueLit: ...
        def __init__(
            self,
            *,
            path: edgir.ref_pb2.LocalPath | None = ...,
            value: edgir.lit_pb2.ValueLit | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["path", b"path", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["path", b"path", "value", b"value"]) -> None: ...

    BACKEND_FIELD_NUMBER: builtins.int
    DESIGN_FIELD_NUMBER: builtins.int
    SOLVEDVALUES_FIELD_NUMBER: builtins.int
    @property
    def backend(self) -> edgir.ref_pb2.LibraryPath: ...
    @property
    def design(self) -> edgir.schema_pb2.Design: ...
    @property
    def solvedValues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendRequest.Value]: ...
    def __init__(
        self,
        *,
        backend: edgir.ref_pb2.LibraryPath | None = ...,
        design: edgir.schema_pb2.Design | None = ...,
        solvedValues: collections.abc.Iterable[global___BackendRequest.Value] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backend", b"backend", "design", b"design"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backend", b"backend", "design", b"design", "solvedValues", b"solvedValues"]) -> None: ...

global___BackendRequest = BackendRequest

class BackendResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Result(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PATH_FIELD_NUMBER: builtins.int
        TEXT_FIELD_NUMBER: builtins.int
        @property
        def path(self) -> edgir.ref_pb2.LocalPath:
            """path of corresponding element in design tree"""
        text: builtins.str
        """for now, only text supported, for KiCad netlisting"""
        def __init__(
            self,
            *,
            path: edgir.ref_pb2.LocalPath | None = ...,
            text: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["path", b"path", "result", b"result", "text", b"text"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["path", b"path", "result", b"result", "text", b"text"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["result", b"result"]) -> typing_extensions.Literal["text"] | None: ...

    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendResponse.Result]: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___BackendResponse.Result] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["results", b"results"]) -> None: ...

global___BackendResponse = BackendResponse

class ErrorResponse(google.protobuf.message.Message):
    """catch all error response"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERROR_FIELD_NUMBER: builtins.int
    TRACEBACK_FIELD_NUMBER: builtins.int
    error: builtins.str
    traceback: builtins.str
    def __init__(
        self,
        *,
        error: builtins.str = ...,
        traceback: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "traceback", b"traceback"]) -> None: ...

global___ErrorResponse = ErrorResponse

class HdlRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDEX_MODULE_FIELD_NUMBER: builtins.int
    GET_LIBRARY_ELEMENT_FIELD_NUMBER: builtins.int
    ELABORATE_GENERATOR_FIELD_NUMBER: builtins.int
    RUN_BACKEND_FIELD_NUMBER: builtins.int
    @property
    def index_module(self) -> global___ModuleName:
        """returns an index of IR elements in a Python module"""
    @property
    def get_library_element(self) -> global___LibraryRequest:
        """returns the IR for a library element"""
    @property
    def elaborate_generator(self) -> global___GeneratorRequest:
        """returns the elaborated IR"""
    @property
    def run_backend(self) -> global___BackendRequest: ...
    def __init__(
        self,
        *,
        index_module: global___ModuleName | None = ...,
        get_library_element: global___LibraryRequest | None = ...,
        elaborate_generator: global___GeneratorRequest | None = ...,
        run_backend: global___BackendRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elaborate_generator", b"elaborate_generator", "get_library_element", b"get_library_element", "index_module", b"index_module", "request", b"request", "run_backend", b"run_backend"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["elaborate_generator", b"elaborate_generator", "get_library_element", b"get_library_element", "index_module", b"index_module", "request", b"request", "run_backend", b"run_backend"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["request", b"request"]) -> typing_extensions.Literal["index_module", "get_library_element", "elaborate_generator", "run_backend"] | None: ...

global___HdlRequest = HdlRequest

class HdlResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDEX_MODULE_FIELD_NUMBER: builtins.int
    GET_LIBRARY_ELEMENT_FIELD_NUMBER: builtins.int
    ELABORATE_GENERATOR_FIELD_NUMBER: builtins.int
    RUN_BACKEND_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def index_module(self) -> global___IndexResponse:
        """list of contained library elements"""
    @property
    def get_library_element(self) -> global___LibraryResponse: ...
    @property
    def elaborate_generator(self) -> global___GeneratorResponse: ...
    @property
    def run_backend(self) -> global___BackendResponse: ...
    @property
    def error(self) -> global___ErrorResponse: ...
    def __init__(
        self,
        *,
        index_module: global___IndexResponse | None = ...,
        get_library_element: global___LibraryResponse | None = ...,
        elaborate_generator: global___GeneratorResponse | None = ...,
        run_backend: global___BackendResponse | None = ...,
        error: global___ErrorResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elaborate_generator", b"elaborate_generator", "error", b"error", "get_library_element", b"get_library_element", "index_module", b"index_module", "response", b"response", "run_backend", b"run_backend"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["elaborate_generator", b"elaborate_generator", "error", b"error", "get_library_element", b"get_library_element", "index_module", b"index_module", "response", b"response", "run_backend", b"run_backend"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["response", b"response"]) -> typing_extensions.Literal["index_module", "get_library_element", "elaborate_generator", "run_backend", "error"] | None: ...

global___HdlResponse = HdlResponse
