"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
*
File : elem.proto
Package : edg.elem

Elements (Blocks, Ports, Links, and Envs) are all equivalent to
a set of declarations with some typing information, howver it is
much nicer to parse them out into more concrete structures.

We don't strictly differentiate between library elements and
elements within a design within the protobuf. In general, when
there is a library element, we
"""
import builtins
import collections.abc
from .. import edgir
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class NamedValInit(google.protobuf.message.Message):
    """These are essentially a element in a map<string, value>, but because maps
    are unordered (whereas we want to preserve ordering to preserve design intent
    through the compiler), we use a sequence of these pairs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str

    @property
    def value(self) -> edgir.init_pb2.ValInit:
        ...

    def __init__(self, *, name: builtins.str=..., value: edgir.init_pb2.ValInit | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name', 'value', b'value']) -> None:
        ...
global___NamedValInit = NamedValInit

@typing_extensions.final
class NamedValueExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str

    @property
    def value(self) -> edgir.expr_pb2.ValueExpr:
        ...

    def __init__(self, *, name: builtins.str=..., value: edgir.expr_pb2.ValueExpr | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name', 'value', b'value']) -> None:
        ...
global___NamedValueExpr = NamedValueExpr

@typing_extensions.final
class NamedPortLike(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str

    @property
    def value(self) -> global___PortLike:
        ...

    def __init__(self, *, name: builtins.str=..., value: global___PortLike | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name', 'value', b'value']) -> None:
        ...
global___NamedPortLike = NamedPortLike

@typing_extensions.final
class NamedBlockLike(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str

    @property
    def value(self) -> global___BlockLike:
        ...

    def __init__(self, *, name: builtins.str=..., value: global___BlockLike | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name', 'value', b'value']) -> None:
        ...
global___NamedBlockLike = NamedBlockLike

@typing_extensions.final
class NamedLinkLike(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str

    @property
    def value(self) -> global___LinkLike:
        ...

    def __init__(self, *, name: builtins.str=..., value: global___LinkLike | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name', 'value', b'value']) -> None:
        ...
global___NamedLinkLike = NamedLinkLike

@typing_extensions.final
class Port(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARAMS_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    SELF_CLASS_FIELD_NUMBER: builtins.int
    SUPERCLASSES_FIELD_NUMBER: builtins.int
    SUPER_SUPERCLASSES_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int

    @property
    def params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValInit]:
        ...

    @property
    def constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValueExpr]:
        ...

    @property
    def self_class(self) -> edgir.ref_pb2.LibraryPath:
        ...

    @property
    def superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """superclasses, may be empty"""

    @property
    def super_superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """all (recursive) superclasses above superclasses"""

    @property
    def meta(self) -> edgir.common_pb2.Metadata:
        """TODO: this provides type hierarchy data only, inheritance semantics are currently undefined"""

    def __init__(self, *, params: collections.abc.Iterable[global___NamedValInit] | None=..., constraints: collections.abc.Iterable[global___NamedValueExpr] | None=..., self_class: edgir.ref_pb2.LibraryPath | None=..., superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., super_superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., meta: edgir.common_pb2.Metadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['meta', b'meta', 'self_class', b'self_class']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['constraints', b'constraints', 'meta', b'meta', 'params', b'params', 'self_class', b'self_class', 'super_superclasses', b'super_superclasses', 'superclasses', b'superclasses']) -> None:
        ...
global___Port = Port

@typing_extensions.final
class Bundle(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARAMS_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    SELF_CLASS_FIELD_NUMBER: builtins.int
    SUPERCLASSES_FIELD_NUMBER: builtins.int
    SUPER_SUPERCLASSES_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int

    @property
    def params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValInit]:
        ...

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPortLike]:
        ...

    @property
    def constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValueExpr]:
        ...

    @property
    def self_class(self) -> edgir.ref_pb2.LibraryPath:
        ...

    @property
    def superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """superclasses, may be empty"""

    @property
    def super_superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """all (recursive) superclasses above superclasses"""

    @property
    def meta(self) -> edgir.common_pb2.Metadata:
        ...

    def __init__(self, *, params: collections.abc.Iterable[global___NamedValInit] | None=..., ports: collections.abc.Iterable[global___NamedPortLike] | None=..., constraints: collections.abc.Iterable[global___NamedValueExpr] | None=..., self_class: edgir.ref_pb2.LibraryPath | None=..., superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., super_superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., meta: edgir.common_pb2.Metadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['meta', b'meta', 'self_class', b'self_class']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['constraints', b'constraints', 'meta', b'meta', 'params', b'params', 'ports', b'ports', 'self_class', b'self_class', 'super_superclasses', b'super_superclasses', 'superclasses', b'superclasses']) -> None:
        ...
global___Bundle = Bundle

@typing_extensions.final
class PortArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Ports(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        PORTS_FIELD_NUMBER: builtins.int

        @property
        def ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPortLike]:
            ...

        def __init__(self, *, ports: collections.abc.Iterable[global___NamedPortLike] | None=...) -> None:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['ports', b'ports']) -> None:
            ...
    SELF_CLASS_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int

    @property
    def self_class(self) -> edgir.ref_pb2.LibraryPath:
        """The class that applies to every port in the set/array. Used
        when a new port is instantiated by the front or back end.
        """

    @property
    def ports(self) -> global___PortArray.Ports:
        ...

    @property
    def meta(self) -> edgir.common_pb2.Metadata:
        ...

    def __init__(self, *, self_class: edgir.ref_pb2.LibraryPath | None=..., ports: global___PortArray.Ports | None=..., meta: edgir.common_pb2.Metadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['contains', b'contains', 'meta', b'meta', 'ports', b'ports', 'self_class', b'self_class']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['contains', b'contains', 'meta', b'meta', 'ports', b'ports', 'self_class', b'self_class']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['contains', b'contains']) -> typing_extensions.Literal['ports'] | None:
        ...
global___PortArray = PortArray

@typing_extensions.final
class PortLike(google.protobuf.message.Message):
    """* Wrapper for different port like elements"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UNDEFINED_FIELD_NUMBER: builtins.int
    LIB_ELEM_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    ARRAY_FIELD_NUMBER: builtins.int
    BUNDLE_FIELD_NUMBER: builtins.int

    @property
    def undefined(self) -> edgir.common_pb2.Empty:
        ...

    @property
    def lib_elem(self) -> edgir.ref_pb2.LibraryPath:
        ...

    @property
    def port(self) -> global___Port:
        """* 'port' disallowed w/in the library"""

    @property
    def array(self) -> global___PortArray:
        ...

    @property
    def bundle(self) -> global___Bundle:
        """* 'bundle' disallowed w/in the library"""

    def __init__(self, *, undefined: edgir.common_pb2.Empty | None=..., lib_elem: edgir.ref_pb2.LibraryPath | None=..., port: global___Port | None=..., array: global___PortArray | None=..., bundle: global___Bundle | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['array', b'array', 'bundle', b'bundle', 'is', b'is', 'lib_elem', b'lib_elem', 'port', b'port', 'undefined', b'undefined']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['array', b'array', 'bundle', b'bundle', 'is', b'is', 'lib_elem', b'lib_elem', 'port', b'port', 'undefined', b'undefined']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['is', b'is']) -> typing_extensions.Literal['undefined', 'lib_elem', 'port', 'array', 'bundle'] | None:
        ...
global___PortLike = PortLike

@typing_extensions.final
class Parameter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PATH_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int

    @property
    def path(self) -> edgir.ref_pb2.LocalPath:
        ...
    unit: builtins.str

    def __init__(self, *, path: edgir.ref_pb2.LocalPath | None=..., unit: builtins.str=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['path', b'path']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['path', b'path', 'unit', b'unit']) -> None:
        ...
global___Parameter = Parameter

@typing_extensions.final
class StringDescriptionElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    PARAM_FIELD_NUMBER: builtins.int
    text: builtins.str

    @property
    def param(self) -> global___Parameter:
        ...

    def __init__(self, *, text: builtins.str=..., param: global___Parameter | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['ElementType', b'ElementType', 'param', b'param', 'text', b'text']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['ElementType', b'ElementType', 'param', b'param', 'text', b'text']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['ElementType', b'ElementType']) -> typing_extensions.Literal['text', 'param'] | None:
        ...
global___StringDescriptionElement = StringDescriptionElement

@typing_extensions.final
class HierarchyBlock(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ParamDefaultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> edgir.expr_pb2.ValueExpr:
            ...

        def __init__(self, *, key: builtins.str=..., value: edgir.expr_pb2.ValueExpr | None=...) -> None:
            ...

        def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    PARAMS_FIELD_NUMBER: builtins.int
    PARAM_DEFAULTS_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    BLOCKS_FIELD_NUMBER: builtins.int
    LINKS_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    SELF_CLASS_FIELD_NUMBER: builtins.int
    SUPERCLASSES_FIELD_NUMBER: builtins.int
    SUPER_SUPERCLASSES_FIELD_NUMBER: builtins.int
    PREREFINE_CLASS_FIELD_NUMBER: builtins.int
    PREREFINE_MIXINS_FIELD_NUMBER: builtins.int
    GENERATOR_FIELD_NUMBER: builtins.int
    IS_ABSTRACT_FIELD_NUMBER: builtins.int
    DEFAULT_REFINEMENT_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int

    @property
    def params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValInit]:
        ...

    @property
    def param_defaults(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, edgir.expr_pb2.ValueExpr]:
        """Refinements may introduce new parameters which would not be assigned a value in the parent class.
        In those cases, those new parameters are given these default values.
        unordered
        """

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPortLike]:
        ...

    @property
    def blocks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedBlockLike]:
        """* Bridges, which adapt an edge port to a link port - eg, edge VoltageSink to an internal link
        VoltageSource, are defined as blocks in the IR. Upper layers can define convenience constructs and/or
        infer these blocks.
        """

    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedLinkLike]:
        ...

    @property
    def constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValueExpr]:
        """* Connections between internal block and link ports are represented by connected constraints.
        Connections between internal; block and edge (of this block) ports are represented by exported constraints.
        """

    @property
    def self_class(self) -> edgir.ref_pb2.LibraryPath:
        """self class, equivalent to the library name"""

    @property
    def superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """immediate superclasses, may be empty"""

    @property
    def super_superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """all (recursive) superclasses above superclasses"""

    @property
    def prerefine_class(self) -> edgir.ref_pb2.LibraryPath:
        """class pre-refinement, only defined if refined"""

    @property
    def prerefine_mixins(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """mixins pre-refinement, from library elem"""

    @property
    def generator(self) -> global___Generator:
        """optional, and removed upon invocation"""
    is_abstract: builtins.bool
    'true if self_class is abstract, and should error if used in a design'

    @property
    def default_refinement(self) -> edgir.ref_pb2.LibraryPath:
        """optional default refinement subclass, only valid for library blocks"""

    @property
    def meta(self) -> edgir.common_pb2.Metadata:
        ...

    @property
    def description(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StringDescriptionElement]:
        ...

    def __init__(self, *, params: collections.abc.Iterable[global___NamedValInit] | None=..., param_defaults: collections.abc.Mapping[builtins.str, edgir.expr_pb2.ValueExpr] | None=..., ports: collections.abc.Iterable[global___NamedPortLike] | None=..., blocks: collections.abc.Iterable[global___NamedBlockLike] | None=..., links: collections.abc.Iterable[global___NamedLinkLike] | None=..., constraints: collections.abc.Iterable[global___NamedValueExpr] | None=..., self_class: edgir.ref_pb2.LibraryPath | None=..., superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., super_superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., prerefine_class: edgir.ref_pb2.LibraryPath | None=..., prerefine_mixins: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., generator: global___Generator | None=..., is_abstract: builtins.bool=..., default_refinement: edgir.ref_pb2.LibraryPath | None=..., meta: edgir.common_pb2.Metadata | None=..., description: collections.abc.Iterable[global___StringDescriptionElement] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['default_refinement', b'default_refinement', 'generator', b'generator', 'meta', b'meta', 'prerefine_class', b'prerefine_class', 'self_class', b'self_class']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['blocks', b'blocks', 'constraints', b'constraints', 'default_refinement', b'default_refinement', 'description', b'description', 'generator', b'generator', 'is_abstract', b'is_abstract', 'links', b'links', 'meta', b'meta', 'param_defaults', b'param_defaults', 'params', b'params', 'ports', b'ports', 'prerefine_class', b'prerefine_class', 'prerefine_mixins', b'prerefine_mixins', 'self_class', b'self_class', 'super_superclasses', b'super_superclasses', 'superclasses', b'superclasses']) -> None:
        ...
global___HierarchyBlock = HierarchyBlock

@typing_extensions.final
class Generator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUIRED_PARAMS_FIELD_NUMBER: builtins.int

    @property
    def required_params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LocalPath]:
        """Parameters that must be defined for the generator to fire.
        These parameters are the only ones accessible to the generator.
        """

    def __init__(self, *, required_params: collections.abc.Iterable[edgir.ref_pb2.LocalPath] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['required_params', b'required_params']) -> None:
        ...
global___Generator = Generator

@typing_extensions.final
class BlockLibrary(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BASE_FIELD_NUMBER: builtins.int
    MIXINS_FIELD_NUMBER: builtins.int

    @property
    def base(self) -> edgir.ref_pb2.LibraryPath:
        ...

    @property
    def mixins(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        ...

    def __init__(self, *, base: edgir.ref_pb2.LibraryPath | None=..., mixins: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['base', b'base']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['base', b'base', 'mixins', b'mixins']) -> None:
        ...
global___BlockLibrary = BlockLibrary

@typing_extensions.final
class BlockLike(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UNDEFINED_FIELD_NUMBER: builtins.int
    LIB_ELEM_FIELD_NUMBER: builtins.int
    HIERARCHY_FIELD_NUMBER: builtins.int

    @property
    def undefined(self) -> edgir.common_pb2.Empty:
        ...

    @property
    def lib_elem(self) -> global___BlockLibrary:
        ...

    @property
    def hierarchy(self) -> global___HierarchyBlock:
        """* not allowed w/in the library"""

    def __init__(self, *, undefined: edgir.common_pb2.Empty | None=..., lib_elem: global___BlockLibrary | None=..., hierarchy: global___HierarchyBlock | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['hierarchy', b'hierarchy', 'lib_elem', b'lib_elem', 'type', b'type', 'undefined', b'undefined']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['hierarchy', b'hierarchy', 'lib_elem', b'lib_elem', 'type', b'type', 'undefined', b'undefined']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['type', b'type']) -> typing_extensions.Literal['undefined', 'lib_elem', 'hierarchy'] | None:
        ...
global___BlockLike = BlockLike

@typing_extensions.final
class Link(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARAMS_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    LINKS_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    SELF_CLASS_FIELD_NUMBER: builtins.int
    SUPERCLASSES_FIELD_NUMBER: builtins.int
    SUPER_SUPERCLASSES_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int

    @property
    def params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValInit]:
        ...

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPortLike]:
        ...

    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedLinkLike]:
        ...

    @property
    def constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValueExpr]:
        ...

    @property
    def self_class(self) -> edgir.ref_pb2.LibraryPath:
        ...

    @property
    def superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """superclasses, may be empty"""

    @property
    def super_superclasses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[edgir.ref_pb2.LibraryPath]:
        """all (recursive) superclasses above superclasses"""

    @property
    def meta(self) -> edgir.common_pb2.Metadata:
        """TODO: this provides type hierarchy data only, inheritance semantics are currently undefined"""

    @property
    def description(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StringDescriptionElement]:
        ...

    def __init__(self, *, params: collections.abc.Iterable[global___NamedValInit] | None=..., ports: collections.abc.Iterable[global___NamedPortLike] | None=..., links: collections.abc.Iterable[global___NamedLinkLike] | None=..., constraints: collections.abc.Iterable[global___NamedValueExpr] | None=..., self_class: edgir.ref_pb2.LibraryPath | None=..., superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., super_superclasses: collections.abc.Iterable[edgir.ref_pb2.LibraryPath] | None=..., meta: edgir.common_pb2.Metadata | None=..., description: collections.abc.Iterable[global___StringDescriptionElement] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['meta', b'meta', 'self_class', b'self_class']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['constraints', b'constraints', 'description', b'description', 'links', b'links', 'meta', b'meta', 'params', b'params', 'ports', b'ports', 'self_class', b'self_class', 'super_superclasses', b'super_superclasses', 'superclasses', b'superclasses']) -> None:
        ...
global___Link = Link

@typing_extensions.final
class LinkArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SELF_CLASS_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    LINKS_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int

    @property
    def self_class(self) -> edgir.ref_pb2.LibraryPath:
        """The class that applies to every link in the set/array. Used
        when a new link is instantiated by the front or back end.
        """

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPortLike]:
        """Only designs should contain an implementation here
        the last index is the index of the link, the first indices (if any) are the indices of the corresponding port in the inner link
        """

    @property
    def constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedValueExpr]:
        """includes all exported constraints to map link ports to my ports"""

    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedLinkLike]:
        ...

    @property
    def meta(self) -> edgir.common_pb2.Metadata:
        ...

    def __init__(self, *, self_class: edgir.ref_pb2.LibraryPath | None=..., ports: collections.abc.Iterable[global___NamedPortLike] | None=..., constraints: collections.abc.Iterable[global___NamedValueExpr] | None=..., links: collections.abc.Iterable[global___NamedLinkLike] | None=..., meta: edgir.common_pb2.Metadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['meta', b'meta', 'self_class', b'self_class']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['constraints', b'constraints', 'links', b'links', 'meta', b'meta', 'ports', b'ports', 'self_class', b'self_class']) -> None:
        ...
global___LinkArray = LinkArray

@typing_extensions.final
class LinkLike(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UNDEFINED_FIELD_NUMBER: builtins.int
    LIB_ELEM_FIELD_NUMBER: builtins.int
    LINK_FIELD_NUMBER: builtins.int
    ARRAY_FIELD_NUMBER: builtins.int

    @property
    def undefined(self) -> edgir.common_pb2.Empty:
        ...

    @property
    def lib_elem(self) -> edgir.ref_pb2.LibraryPath:
        ...

    @property
    def link(self) -> global___Link:
        """* not allowed w/in the library"""

    @property
    def array(self) -> global___LinkArray:
        ...

    def __init__(self, *, undefined: edgir.common_pb2.Empty | None=..., lib_elem: edgir.ref_pb2.LibraryPath | None=..., link: global___Link | None=..., array: global___LinkArray | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['array', b'array', 'lib_elem', b'lib_elem', 'link', b'link', 'type', b'type', 'undefined', b'undefined']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['array', b'array', 'lib_elem', b'lib_elem', 'link', b'link', 'type', b'type', 'undefined', b'undefined']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['type', b'type']) -> typing_extensions.Literal['undefined', 'lib_elem', 'link', 'array'] | None:
        ...
global___LinkLike = LinkLike