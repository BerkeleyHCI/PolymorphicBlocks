# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: expr.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import name_pb2 as name__pb2
from . import ref_pb2 as ref__pb2
from . import common_pb2 as common__pb2
from . import lit_pb2 as lit__pb2
from . import type_pb2 as type__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='expr.proto',
  package='edg.expr',
  syntax='proto3',
  serialized_pb=_b('\n\nexpr.proto\x12\x08\x65\x64g.expr\x1a\nname.proto\x1a\tref.proto\x1a\x0c\x63ommon.proto\x1a\tlit.proto\x1a\ntype.proto\"\xc5\x02\n\nBinaryExpr\x12#\n\x02op\x18\x01 \x01(\x0e\x32\x17.edg.expr.BinaryExpr.Op\x12 \n\x03lhs\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12 \n\x03rhs\x18\x03 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"\xcd\x01\n\x02Op\x12\r\n\tUNDEFINED\x10\x00\x12\x07\n\x03\x41\x44\x44\x10\n\x12\x07\n\x03SUB\x10\x0b\x12\x08\n\x04MULT\x10\x0c\x12\x07\n\x03\x44IV\x10\r\x12\x07\n\x03\x41ND\x10\x14\x12\x06\n\x02OR\x10\x15\x12\x07\n\x03XOR\x10\x16\x12\x0b\n\x07IMPLIES\x10\x17\x12\x06\n\x02\x45Q\x10\x1e\x12\x07\n\x03NEQ\x10\x1f\x12\x06\n\x02GT\x10(\x12\x07\n\x03GTE\x10)\x12\x06\n\x02LT\x10*\x12\x07\n\x03LTE\x10,\x12\x07\n\x03MAX\x10-\x12\x07\n\x03MIN\x10.\x12\x10\n\x0cINTERSECTION\x10\x33\x12\n\n\x06SUBSET\x10\x35\x12\t\n\x05RANGE\x10\x01\"\xee\x01\n\rReductionExpr\x12&\n\x02op\x18\x01 \x01(\x0e\x32\x1a.edg.expr.ReductionExpr.Op\x12!\n\x04vals\x18\x04 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"\x91\x01\n\x02Op\x12\r\n\tUNDEFINED\x10\x00\x12\x07\n\x03SUM\x10\x01\x12\x0c\n\x08\x41LL_TRUE\x10\x02\x12\x0c\n\x08\x41NY_TRUE\x10\x03\x12\n\n\x06\x41LL_EQ\x10\x04\x12\x0e\n\nALL_UNIQUE\x10\x05\x12\x0b\n\x07MAXIMUM\x10\n\x12\x0b\n\x07MINIMUM\x10\x0b\x12\x0f\n\x0bSET_EXTRACT\x10\x0c\x12\x10\n\x0cINTERSECTION\x10\r\"W\n\tRangeExpr\x12$\n\x07minimum\x18\x01 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12$\n\x07maximum\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"|\n\nStructExpr\x12,\n\x04vals\x18\x01 \x03(\x0b\x32\x1e.edg.expr.StructExpr.ValsEntry\x1a@\n\tValsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\"\n\x05value\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr:\x02\x38\x01\"\x9b\x01\n\x0eIfThenElseExpr\x12!\n\x04\x63ond\x18\x01 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12 \n\x03tru\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12 \n\x03\x66\x61l\x18\x03 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12\"\n\x04meta\x18\x7f \x01(\x0b\x32\x14.edg.common.Metadata\"Y\n\x0b\x45xtractExpr\x12&\n\tcontainer\x18\x01 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12\"\n\x05index\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"Z\n\x0eMapExtractExpr\x12&\n\tcontainer\x18\x01 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12 \n\x04path\x18\x02 \x01(\x0b\x32\x12.edg.ref.LocalPath\"`\n\rConnectedExpr\x12\'\n\nblock_port\x18\x01 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12&\n\tlink_port\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"l\n\x0c\x45xportedExpr\x12*\n\rexterior_port\x18\x01 \x01(\x0b\x32\x13.edg.expr.ValueExpr\x12\x30\n\x13internal_block_port\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"O\n\nAssignExpr\x12\x1f\n\x03\x64st\x18\x01 \x01(\x0b\x32\x12.edg.ref.LocalPath\x12 \n\x03src\x18\x02 \x01(\x0b\x32\x13.edg.expr.ValueExpr\"\xae\x04\n\tValueExpr\x12$\n\x07literal\x18\x01 \x01(\x0b\x32\x11.edg.lit.ValueLitH\x00\x12&\n\x06\x62inary\x18\x02 \x01(\x0b\x32\x14.edg.expr.BinaryExprH\x00\x12)\n\x06reduce\x18\x04 \x01(\x0b\x32\x17.edg.expr.ReductionExprH\x00\x12&\n\x06struct\x18\x07 \x01(\x0b\x32\x14.edg.expr.StructExprH\x00\x12$\n\x05range\x18\x08 \x01(\x0b\x32\x13.edg.expr.RangeExprH\x00\x12.\n\nifThenElse\x18\n \x01(\x0b\x32\x18.edg.expr.IfThenElseExprH\x00\x12(\n\x07\x65xtract\x18\x0c \x01(\x0b\x32\x15.edg.expr.ExtractExprH\x00\x12/\n\x0bmap_extract\x18\x0e \x01(\x0b\x32\x18.edg.expr.MapExtractExprH\x00\x12,\n\tconnected\x18\x0f \x01(\x0b\x32\x17.edg.expr.ConnectedExprH\x00\x12*\n\x08\x65xported\x18\x10 \x01(\x0b\x32\x16.edg.expr.ExportedExprH\x00\x12&\n\x06\x61ssign\x18\x11 \x01(\x0b\x32\x14.edg.expr.AssignExprH\x00\x12!\n\x03ref\x18\x63 \x01(\x0b\x32\x12.edg.ref.LocalPathH\x00\x12\"\n\x04meta\x18\x7f \x01(\x0b\x32\x14.edg.common.MetadataB\x06\n\x04\x65xprb\x06proto3')
  ,
  dependencies=[name__pb2.DESCRIPTOR,ref__pb2.DESCRIPTOR,common__pb2.DESCRIPTOR,lit__pb2.DESCRIPTOR,type__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_BINARYEXPR_OP = _descriptor.EnumDescriptor(
  name='Op',
  full_name='edg.expr.BinaryExpr.Op',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADD', index=1, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUB', index=2, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULT', index=3, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIV', index=4, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AND', index=5, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OR', index=6, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='XOR', index=7, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPLIES', index=8, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EQ', index=9, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEQ', index=10, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GT', index=11, number=40,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GTE', index=12, number=41,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LT', index=13, number=42,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LTE', index=14, number=44,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX', index=15, number=45,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN', index=16, number=46,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERSECTION', index=17, number=51,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBSET', index=18, number=53,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANGE', index=19, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=205,
  serialized_end=410,
)
_sym_db.RegisterEnumDescriptor(_BINARYEXPR_OP)

_REDUCTIONEXPR_OP = _descriptor.EnumDescriptor(
  name='Op',
  full_name='edg.expr.ReductionExpr.Op',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALL_TRUE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANY_TRUE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALL_EQ', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALL_UNIQUE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM', index=6, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MINIMUM', index=7, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_EXTRACT', index=8, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERSECTION', index=9, number=13,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=506,
  serialized_end=651,
)
_sym_db.RegisterEnumDescriptor(_REDUCTIONEXPR_OP)


_BINARYEXPR = _descriptor.Descriptor(
  name='BinaryExpr',
  full_name='edg.expr.BinaryExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='edg.expr.BinaryExpr.op', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lhs', full_name='edg.expr.BinaryExpr.lhs', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rhs', full_name='edg.expr.BinaryExpr.rhs', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _BINARYEXPR_OP,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=85,
  serialized_end=410,
)


_REDUCTIONEXPR = _descriptor.Descriptor(
  name='ReductionExpr',
  full_name='edg.expr.ReductionExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='edg.expr.ReductionExpr.op', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vals', full_name='edg.expr.ReductionExpr.vals', index=1,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _REDUCTIONEXPR_OP,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=413,
  serialized_end=651,
)


_RANGEEXPR = _descriptor.Descriptor(
  name='RangeExpr',
  full_name='edg.expr.RangeExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='minimum', full_name='edg.expr.RangeExpr.minimum', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='edg.expr.RangeExpr.maximum', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=653,
  serialized_end=740,
)


_STRUCTEXPR_VALSENTRY = _descriptor.Descriptor(
  name='ValsEntry',
  full_name='edg.expr.StructExpr.ValsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='edg.expr.StructExpr.ValsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='edg.expr.StructExpr.ValsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=802,
  serialized_end=866,
)

_STRUCTEXPR = _descriptor.Descriptor(
  name='StructExpr',
  full_name='edg.expr.StructExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vals', full_name='edg.expr.StructExpr.vals', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_STRUCTEXPR_VALSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=742,
  serialized_end=866,
)


_IFTHENELSEEXPR = _descriptor.Descriptor(
  name='IfThenElseExpr',
  full_name='edg.expr.IfThenElseExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cond', full_name='edg.expr.IfThenElseExpr.cond', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tru', full_name='edg.expr.IfThenElseExpr.tru', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fal', full_name='edg.expr.IfThenElseExpr.fal', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='meta', full_name='edg.expr.IfThenElseExpr.meta', index=3,
      number=127, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=869,
  serialized_end=1024,
)


_EXTRACTEXPR = _descriptor.Descriptor(
  name='ExtractExpr',
  full_name='edg.expr.ExtractExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='container', full_name='edg.expr.ExtractExpr.container', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='index', full_name='edg.expr.ExtractExpr.index', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1026,
  serialized_end=1115,
)


_MAPEXTRACTEXPR = _descriptor.Descriptor(
  name='MapExtractExpr',
  full_name='edg.expr.MapExtractExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='container', full_name='edg.expr.MapExtractExpr.container', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='edg.expr.MapExtractExpr.path', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1117,
  serialized_end=1207,
)


_CONNECTEDEXPR = _descriptor.Descriptor(
  name='ConnectedExpr',
  full_name='edg.expr.ConnectedExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_port', full_name='edg.expr.ConnectedExpr.block_port', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='link_port', full_name='edg.expr.ConnectedExpr.link_port', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1209,
  serialized_end=1305,
)


_EXPORTEDEXPR = _descriptor.Descriptor(
  name='ExportedExpr',
  full_name='edg.expr.ExportedExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exterior_port', full_name='edg.expr.ExportedExpr.exterior_port', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='internal_block_port', full_name='edg.expr.ExportedExpr.internal_block_port', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1307,
  serialized_end=1415,
)


_ASSIGNEXPR = _descriptor.Descriptor(
  name='AssignExpr',
  full_name='edg.expr.AssignExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dst', full_name='edg.expr.AssignExpr.dst', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src', full_name='edg.expr.AssignExpr.src', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1417,
  serialized_end=1496,
)


_VALUEEXPR = _descriptor.Descriptor(
  name='ValueExpr',
  full_name='edg.expr.ValueExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='literal', full_name='edg.expr.ValueExpr.literal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='binary', full_name='edg.expr.ValueExpr.binary', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reduce', full_name='edg.expr.ValueExpr.reduce', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='struct', full_name='edg.expr.ValueExpr.struct', index=3,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range', full_name='edg.expr.ValueExpr.range', index=4,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifThenElse', full_name='edg.expr.ValueExpr.ifThenElse', index=5,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extract', full_name='edg.expr.ValueExpr.extract', index=6,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_extract', full_name='edg.expr.ValueExpr.map_extract', index=7,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connected', full_name='edg.expr.ValueExpr.connected', index=8,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exported', full_name='edg.expr.ValueExpr.exported', index=9,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assign', full_name='edg.expr.ValueExpr.assign', index=10,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ref', full_name='edg.expr.ValueExpr.ref', index=11,
      number=99, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='meta', full_name='edg.expr.ValueExpr.meta', index=12,
      number=127, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='edg.expr.ValueExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1499,
  serialized_end=2057,
)

_BINARYEXPR.fields_by_name['op'].enum_type = _BINARYEXPR_OP
_BINARYEXPR.fields_by_name['lhs'].message_type = _VALUEEXPR
_BINARYEXPR.fields_by_name['rhs'].message_type = _VALUEEXPR
_BINARYEXPR_OP.containing_type = _BINARYEXPR
_REDUCTIONEXPR.fields_by_name['op'].enum_type = _REDUCTIONEXPR_OP
_REDUCTIONEXPR.fields_by_name['vals'].message_type = _VALUEEXPR
_REDUCTIONEXPR_OP.containing_type = _REDUCTIONEXPR
_RANGEEXPR.fields_by_name['minimum'].message_type = _VALUEEXPR
_RANGEEXPR.fields_by_name['maximum'].message_type = _VALUEEXPR
_STRUCTEXPR_VALSENTRY.fields_by_name['value'].message_type = _VALUEEXPR
_STRUCTEXPR_VALSENTRY.containing_type = _STRUCTEXPR
_STRUCTEXPR.fields_by_name['vals'].message_type = _STRUCTEXPR_VALSENTRY
_IFTHENELSEEXPR.fields_by_name['cond'].message_type = _VALUEEXPR
_IFTHENELSEEXPR.fields_by_name['tru'].message_type = _VALUEEXPR
_IFTHENELSEEXPR.fields_by_name['fal'].message_type = _VALUEEXPR
_IFTHENELSEEXPR.fields_by_name['meta'].message_type = common__pb2._METADATA
_EXTRACTEXPR.fields_by_name['container'].message_type = _VALUEEXPR
_EXTRACTEXPR.fields_by_name['index'].message_type = _VALUEEXPR
_MAPEXTRACTEXPR.fields_by_name['container'].message_type = _VALUEEXPR
_MAPEXTRACTEXPR.fields_by_name['path'].message_type = ref__pb2._LOCALPATH
_CONNECTEDEXPR.fields_by_name['block_port'].message_type = _VALUEEXPR
_CONNECTEDEXPR.fields_by_name['link_port'].message_type = _VALUEEXPR
_EXPORTEDEXPR.fields_by_name['exterior_port'].message_type = _VALUEEXPR
_EXPORTEDEXPR.fields_by_name['internal_block_port'].message_type = _VALUEEXPR
_ASSIGNEXPR.fields_by_name['dst'].message_type = ref__pb2._LOCALPATH
_ASSIGNEXPR.fields_by_name['src'].message_type = _VALUEEXPR
_VALUEEXPR.fields_by_name['literal'].message_type = lit__pb2._VALUELIT
_VALUEEXPR.fields_by_name['binary'].message_type = _BINARYEXPR
_VALUEEXPR.fields_by_name['reduce'].message_type = _REDUCTIONEXPR
_VALUEEXPR.fields_by_name['struct'].message_type = _STRUCTEXPR
_VALUEEXPR.fields_by_name['range'].message_type = _RANGEEXPR
_VALUEEXPR.fields_by_name['ifThenElse'].message_type = _IFTHENELSEEXPR
_VALUEEXPR.fields_by_name['extract'].message_type = _EXTRACTEXPR
_VALUEEXPR.fields_by_name['map_extract'].message_type = _MAPEXTRACTEXPR
_VALUEEXPR.fields_by_name['connected'].message_type = _CONNECTEDEXPR
_VALUEEXPR.fields_by_name['exported'].message_type = _EXPORTEDEXPR
_VALUEEXPR.fields_by_name['assign'].message_type = _ASSIGNEXPR
_VALUEEXPR.fields_by_name['ref'].message_type = ref__pb2._LOCALPATH
_VALUEEXPR.fields_by_name['meta'].message_type = common__pb2._METADATA
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['literal'])
_VALUEEXPR.fields_by_name['literal'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['binary'])
_VALUEEXPR.fields_by_name['binary'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['reduce'])
_VALUEEXPR.fields_by_name['reduce'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['struct'])
_VALUEEXPR.fields_by_name['struct'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['range'])
_VALUEEXPR.fields_by_name['range'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['ifThenElse'])
_VALUEEXPR.fields_by_name['ifThenElse'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['extract'])
_VALUEEXPR.fields_by_name['extract'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['map_extract'])
_VALUEEXPR.fields_by_name['map_extract'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['connected'])
_VALUEEXPR.fields_by_name['connected'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['exported'])
_VALUEEXPR.fields_by_name['exported'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['assign'])
_VALUEEXPR.fields_by_name['assign'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
_VALUEEXPR.oneofs_by_name['expr'].fields.append(
  _VALUEEXPR.fields_by_name['ref'])
_VALUEEXPR.fields_by_name['ref'].containing_oneof = _VALUEEXPR.oneofs_by_name['expr']
DESCRIPTOR.message_types_by_name['BinaryExpr'] = _BINARYEXPR
DESCRIPTOR.message_types_by_name['ReductionExpr'] = _REDUCTIONEXPR
DESCRIPTOR.message_types_by_name['RangeExpr'] = _RANGEEXPR
DESCRIPTOR.message_types_by_name['StructExpr'] = _STRUCTEXPR
DESCRIPTOR.message_types_by_name['IfThenElseExpr'] = _IFTHENELSEEXPR
DESCRIPTOR.message_types_by_name['ExtractExpr'] = _EXTRACTEXPR
DESCRIPTOR.message_types_by_name['MapExtractExpr'] = _MAPEXTRACTEXPR
DESCRIPTOR.message_types_by_name['ConnectedExpr'] = _CONNECTEDEXPR
DESCRIPTOR.message_types_by_name['ExportedExpr'] = _EXPORTEDEXPR
DESCRIPTOR.message_types_by_name['AssignExpr'] = _ASSIGNEXPR
DESCRIPTOR.message_types_by_name['ValueExpr'] = _VALUEEXPR

BinaryExpr = _reflection.GeneratedProtocolMessageType('BinaryExpr', (_message.Message,), dict(
  DESCRIPTOR = _BINARYEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.BinaryExpr)
  ))
_sym_db.RegisterMessage(BinaryExpr)

ReductionExpr = _reflection.GeneratedProtocolMessageType('ReductionExpr', (_message.Message,), dict(
  DESCRIPTOR = _REDUCTIONEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.ReductionExpr)
  ))
_sym_db.RegisterMessage(ReductionExpr)

RangeExpr = _reflection.GeneratedProtocolMessageType('RangeExpr', (_message.Message,), dict(
  DESCRIPTOR = _RANGEEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.RangeExpr)
  ))
_sym_db.RegisterMessage(RangeExpr)

StructExpr = _reflection.GeneratedProtocolMessageType('StructExpr', (_message.Message,), dict(

  ValsEntry = _reflection.GeneratedProtocolMessageType('ValsEntry', (_message.Message,), dict(
    DESCRIPTOR = _STRUCTEXPR_VALSENTRY,
    __module__ = 'expr_pb2'
    # @@protoc_insertion_point(class_scope:edg.expr.StructExpr.ValsEntry)
    ))
  ,
  DESCRIPTOR = _STRUCTEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.StructExpr)
  ))
_sym_db.RegisterMessage(StructExpr)
_sym_db.RegisterMessage(StructExpr.ValsEntry)

IfThenElseExpr = _reflection.GeneratedProtocolMessageType('IfThenElseExpr', (_message.Message,), dict(
  DESCRIPTOR = _IFTHENELSEEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.IfThenElseExpr)
  ))
_sym_db.RegisterMessage(IfThenElseExpr)

ExtractExpr = _reflection.GeneratedProtocolMessageType('ExtractExpr', (_message.Message,), dict(
  DESCRIPTOR = _EXTRACTEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.ExtractExpr)
  ))
_sym_db.RegisterMessage(ExtractExpr)

MapExtractExpr = _reflection.GeneratedProtocolMessageType('MapExtractExpr', (_message.Message,), dict(
  DESCRIPTOR = _MAPEXTRACTEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.MapExtractExpr)
  ))
_sym_db.RegisterMessage(MapExtractExpr)

ConnectedExpr = _reflection.GeneratedProtocolMessageType('ConnectedExpr', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTEDEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.ConnectedExpr)
  ))
_sym_db.RegisterMessage(ConnectedExpr)

ExportedExpr = _reflection.GeneratedProtocolMessageType('ExportedExpr', (_message.Message,), dict(
  DESCRIPTOR = _EXPORTEDEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.ExportedExpr)
  ))
_sym_db.RegisterMessage(ExportedExpr)

AssignExpr = _reflection.GeneratedProtocolMessageType('AssignExpr', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.AssignExpr)
  ))
_sym_db.RegisterMessage(AssignExpr)

ValueExpr = _reflection.GeneratedProtocolMessageType('ValueExpr', (_message.Message,), dict(
  DESCRIPTOR = _VALUEEXPR,
  __module__ = 'expr_pb2'
  # @@protoc_insertion_point(class_scope:edg.expr.ValueExpr)
  ))
_sym_db.RegisterMessage(ValueExpr)


_STRUCTEXPR_VALSENTRY.has_options = True
_STRUCTEXPR_VALSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
