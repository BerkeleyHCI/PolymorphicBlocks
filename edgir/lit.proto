/**
   File : lit.proto
   Package : edg.lit

   Literals for assorted priitive types, i.e fixed constant values.
 */

syntax = "proto3";
package edg.lit;

import "common.proto";
import "name.proto";

/** The core expression primitives we start with are the value
    literals that we can use */
message FloatLit {
  double val = 1;
}

message IntLit {
  sint64 val = 1;
}

message BoolLit {
  bool val = 1;
}

message TextLit {
  string val = 1;
}

//message SymbolLit {
//  string val = 1;
//}

/** This is a specific new UID that will be concretely assigned
    in the backend. */
//message UIDLit {}


//message SymbolLit {
//  string val = 1;
//}

//message SymbolLit {
//  string val = 1;
//}

message RangeLit {
  ValueLit minimum = 1;
  ValueLit maximum = 2;
}

message StructLit {
  map<string, ValueLit> members = 1;
}

message ValueLit {
  oneof type {
    FloatLit  floating = 1;
    IntLit    integer  = 2;
    BoolLit   boolean  = 3;
    TextLit   text     = 4;
//    SymbolLit symbol   = 5;
//    UIDLit    uid      = 6;
  //SetLit    set      = 8;
    StructLit struct   = 9;
    RangeLit  range    = 10;
  }

  edg.common.Metadata meta = 127;
}